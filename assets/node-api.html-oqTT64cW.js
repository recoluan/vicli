import{_ as n,c as a,e,o as t}from"./app-DyKCri5g.js";const p={};function i(l,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h2 id="definekit" tabindex="-1"><a class="header-anchor" href="#definekit"><span>defineKit</span></a></h2><ul><li>Type: <code>(options: KitOptions) =&gt; Kit</code></li><li>Description: Declare the suite to register custom commands and GUI&#39;s local communication service, etc.</li><li>Example:<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> defineKit<span class="token punctuation">,</span> useServerSocket<span class="token punctuation">,</span> <span class="token keyword">type</span> <span class="token class-name">Kit</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;revili/node&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> demoKit<span class="token operator">:</span> Kit <span class="token operator">=</span> <span class="token function">defineKit</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// The name of the kit</span></span>
<span class="line">  name<span class="token operator">:</span> <span class="token string">&#39;revili-kit-demo&#39;</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// The GUI client development framework, default vue, and will expand react, servlet, web component, etc.</span></span>
<span class="line">  webFramework<span class="token operator">:</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Refer to https://vitejs.dev/config/</span></span>
<span class="line">  viteOptions<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Register for services that can communicate with GUI</span></span>
<span class="line">  <span class="token function">registerService</span><span class="token punctuation">(</span>server<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Register the command</span></span>
<span class="line">  <span class="token function">registerCommand</span><span class="token punctuation">(</span><span class="token punctuation">{</span> program <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    program<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;You triggered the test command!ÔºÅ&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> demoKit</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="getkitdata" tabindex="-1"><a class="header-anchor" href="#getkitdata"><span>getKitData</span></a></h2><ul><li>Type: <code>&lt;T extends BasicRecord, K extends keyof KitData&lt;T&gt;&gt;(prop?: K): Promise&lt;KitData&lt;T&gt;[K] | null | KitData&lt;T&gt;&gt;</code></li><li>Description: Get current kit data.</li><li>Example:<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> getKitData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@revili/helpers/node&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Get all data</span></span>
<span class="line"><span class="token keyword">const</span> kitData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token generic-function"><span class="token function">getKitData</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span> prop<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// Get specific data</span></span>
<span class="line"><span class="token keyword">const</span> propOfKitData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token generic-function"><span class="token function">getKitData</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span> prop<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;prop&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="updatekitdata" tabindex="-1"><a class="header-anchor" href="#updatekitdata"><span>updateKitData</span></a></h2><ul><li>Type: <code>&lt;T extends BasicRecord &amp; Omit&lt;KitData&lt;T&gt;, &#39;name&#39; | &#39;installedAt&#39;&gt;&gt;(partialData: Partial&lt;KitData&lt;T&gt;&gt;): Promise&lt;void&gt;</code></li><li>Description: Updates kit data to update only the specified fields.</li><li>Example:<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> updateKitData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@revili/helpers/node&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">await</span> <span class="token generic-function"><span class="token function">updateKitData</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span> version<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> description<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  version<span class="token operator">:</span> <span class="token string">&#39;1.0.1&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  description<span class="token operator">:</span> <span class="token string">&#39;The description has been updated!&#39;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="updatekitdataitem" tabindex="-1"><a class="header-anchor" href="#updatekitdataitem"><span>updateKitDataItem</span></a></h2><ul><li>Type: <code>&lt;T extends BasicRecord, K extends Exclude&lt;keyof T, &#39;name&#39; | &#39;installedAt&#39;&gt;(key: K, value: T[K]): Promise&lt;void&gt;</code></li><li>Description: Updates kit data to update only the specified field.</li><li>Example:<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> updateKitDataItem <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@revili/helpers/node&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">await</span> <span class="token generic-function"><span class="token function">updateKitDataItem</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span> version<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> description<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;version&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1.0.1&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="useserversocket" tabindex="-1"><a class="header-anchor" href="#useserversocket"><span>useServerSocket</span></a></h2><ul><li>Type: <code>(server: ViteDevServer) =&gt; WebSocketServer | null</code></li><li>Description: The server communicates with the client.</li><li>Example:<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span>defineKit<span class="token punctuation">,</span> useServerSocket<span class="token punctuation">,</span> <span class="token keyword">type</span> <span class="token class-name">Kit</span><span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;revili/node&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> demoKit<span class="token operator">:</span> Kit <span class="token operator">=</span> <span class="token function">defineKit</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  name<span class="token operator">:</span> <span class="token string">&#39;revili-kit-demo&#39;</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">registerService</span><span class="token punctuation">(</span>server<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> socket <span class="token operator">=</span> <span class="token function">useServerSocket</span><span class="token punctuation">(</span>server<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    socket<span class="token operator">?.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;event-name&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// ...</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    socket<span class="token operator">?.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;event-name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;message&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> demoKit</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="ts-declaration" tabindex="-1"><a class="header-anchor" href="#ts-declaration"><span>ts declaration</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">interface</span> <span class="token class-name">KitOptions</span> <span class="token punctuation">{</span></span>
<span class="line">  name<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  webFramework<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line">  viteOptions<span class="token operator">?</span><span class="token operator">:</span> UserConfig</span>
<span class="line">  registerService<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>server<span class="token operator">:</span> ViteDevServer<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span></span>
<span class="line">  <span class="token function-variable function">registerCommand</span><span class="token operator">:</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token punctuation">{</span>program<span class="token operator">:</span> <span class="token constant">CAC</span><span class="token punctuation">;</span> reviliConfig<span class="token operator">?</span><span class="token operator">:</span> ReviliConfig<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">type</span> <span class="token class-name">BasicRecord</span> <span class="token operator">=</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">symbol</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">type</span> <span class="token class-name">KitData<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> BasicRecord <span class="token operator">=</span> BasicRecord<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  version<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  description<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token operator">&amp;</span> <span class="token constant">T</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12)]))}const c=n(p,[["render",i],["__file","node-api.html.vue"]]),r=JSON.parse('{"path":"/docs/api/node-api.html","title":"Node API","lang":"en-US","frontmatter":{"title":"Node API"},"headers":[{"level":2,"title":"defineKit","slug":"definekit","link":"#definekit","children":[]},{"level":2,"title":"getKitData","slug":"getkitdata","link":"#getkitdata","children":[]},{"level":2,"title":"updateKitData","slug":"updatekitdata","link":"#updatekitdata","children":[]},{"level":2,"title":"updateKitDataItem","slug":"updatekitdataitem","link":"#updatekitdataitem","children":[]},{"level":2,"title":"useServerSocket","slug":"useserversocket","link":"#useserversocket","children":[]},{"level":2,"title":"ts declaration","slug":"ts-declaration","link":"#ts-declaration","children":[]}],"git":{"createdTime":1734447996000,"updatedTime":1734447996000,"contributors":[{"name":"reco_luan","email":"recoluan@qq.com","commits":1}]},"filePathRelative":"docs/api/node-api.md"}');export{c as comp,r as data};
